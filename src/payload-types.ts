/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    proyectos: Proyecto;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    proyectos: ProyectosSelect<false> | ProyectosSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    'site-config': SiteConfig;
  };
  globalsSelect: {
    'site-config': SiteConfigSelect<false> | SiteConfigSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * Gestiona los proyectos del portfolio
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "proyectos".
 */
export interface Proyecto {
  id: string;
  titulo: string;
  /**
   * URL amigable para el proyecto (ej: mi-proyecto)
   */
  slug: string;
  /**
   * Ej: Cortometraje, Serie documental, Publicidad
   */
  tipo?: string | null;
  /**
   * Ej: Netflix, TV3, Boogaloo Films
   */
  plataforma?: string | null;
  /**
   * Fecha de estreno o finalización
   */
  fecha: string;
  categoria: ('series-y-cine' | 'publicidad' | 'documental')[];
  /**
   * Imagen de portada del proyecto
   */
  imagen?: (string | null) | Media;
  /**
   * Video en loop para la tarjeta del proyecto
   */
  videoloop?: (string | null) | Media;
  /**
   * URL de YouTube o Vimeo del proyecto
   */
  video?: string | null;
  /**
   * Ej: 8 episodios, 90 minutos, 30 segundos
   */
  duracion?: string | null;
  /**
   * País de producción (ej: España)
   */
  pais?: string | null;
  /**
   * Director(es) del proyecto
   */
  director?:
    | {
        nombre: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Campos adicionales específicos del proyecto (ej: Guión, Música, Montaje, etc.)
   */
  camposPersonalizados?:
    | {
        /**
         * Ej: Guión, Música, Montaje, etc.
         */
        etiqueta: string;
        /**
         * Múltiples valores para este campo (ej: varios guionistas)
         */
        valores?:
          | {
              /**
               * Un valor específico
               */
              valor: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Lista de productoras del proyecto
   */
  productoras?:
    | {
        nombre: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Género del proyecto (ej: Series documentales y deportes)
   */
  genero?: string | null;
  /**
   * Descripción del proyecto
   */
  sinopsis?: string | null;
  /**
   * Director(es) de fotografía del proyecto
   */
  directorFotografia?:
    | {
        nombre: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Responsable(s) de sonido del proyecto
   */
  sonido?:
    | {
        nombre: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Director(es) artístico(s) del proyecto
   */
  direccionArtistica?:
    | {
        nombre: string;
        id?: string | null;
      }[]
    | null;
  /**
   * Marcar para mostrar en la página principal
   */
  destacado?: boolean | null;
  /**
   * Título para SEO (opcional, usa el título si está vacío)
   */
  metaTitle?: string | null;
  /**
   * Descripción para SEO
   */
  metaDescription?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'proyectos';
        value: string | Proyecto;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "proyectos_select".
 */
export interface ProyectosSelect<T extends boolean = true> {
  titulo?: T;
  slug?: T;
  tipo?: T;
  plataforma?: T;
  fecha?: T;
  categoria?: T;
  imagen?: T;
  videoloop?: T;
  video?: T;
  duracion?: T;
  pais?: T;
  director?:
    | T
    | {
        nombre?: T;
        id?: T;
      };
  camposPersonalizados?:
    | T
    | {
        etiqueta?: T;
        valores?:
          | T
          | {
              valor?: T;
              id?: T;
            };
        id?: T;
      };
  productoras?:
    | T
    | {
        nombre?: T;
        id?: T;
      };
  genero?: T;
  sinopsis?: T;
  directorFotografia?:
    | T
    | {
        nombre?: T;
        id?: T;
      };
  sonido?:
    | T
    | {
        nombre?: T;
        id?: T;
      };
  direccionArtistica?:
    | T
    | {
        nombre?: T;
        id?: T;
      };
  destacado?: T;
  metaTitle?: T;
  metaDescription?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-config".
 */
export interface SiteConfig {
  id: string;
  siteName: string;
  siteDescription: string;
  siteUrl: string;
  heroText?: string | null;
  contactEmail?: string | null;
  socialLinks?: {
    twitter?: string | null;
    instagram?: string | null;
    linkedin?: string | null;
    vimeo?: string | null;
  };
  seo?: {
    /**
     * Imagen por defecto para redes sociales
     */
    metaImage?: (string | null) | Media;
    favicon?: (string | null) | Media;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-config_select".
 */
export interface SiteConfigSelect<T extends boolean = true> {
  siteName?: T;
  siteDescription?: T;
  siteUrl?: T;
  heroText?: T;
  contactEmail?: T;
  socialLinks?:
    | T
    | {
        twitter?: T;
        instagram?: T;
        linkedin?: T;
        vimeo?: T;
      };
  seo?:
    | T
    | {
        metaImage?: T;
        favicon?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}